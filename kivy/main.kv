#:import utils kivy.utils
Manager:
    LoginScreen:
    MenuScreen:
    SymptomsScreen:
    SymptomAddEditScreen:

<InnerLayout@MDBoxLayout>:
    padding: 10
    spacing: 10

<LoginScreen>:
    name: 'loginScreen'

    MDCard:
        size_hint: None, None
        size: 300, 300
        pos_hint: {'center_x': 0.5,'center_y': 0.5}
        # elevation: 10
        padding: 25
        spacing: 25
        orientation: 'vertical'

        MDLabel:
            id: welcome_label
            text: 'Привет!'
            font_size: 32
            valign: 'top'
            halign: 'center'
            size_hint: 1, None
            height: self.texture_size[1]
            # padding_y: 15

        MDTextField:
            id: user
            mode: 'round'
            hint_text: 'username'
            icon_right: 'account'
            size_hint_x: None
            width: 200
            font_size: 16
            pos_hint: {'center_x': 0.5}

        MDTextField:
            id: password
            mode: 'round'
            password: True
            hint_text: 'password'
            icon_right: 'form-textbox-password'
            size_hint_x: None
            width: 200
            font_size: 16
            pos_hint: {'center_x': 0.5}

        MDFillRoundFlatButton:
            # MDRaisedButton:
            text: 'Вход'
            pos_hint: {'center_x': 0.5}
            on_release:       
                app.root.change_screen('menuScreen')

<MenuScreen>:
    name:'menuScreen'
    MDCard:
        size: root.width, root.height
        # size_hint: .9, .9
        pos_hint: {'center_x': 0.5,'center_y': 0.5}
        # elevation: 10
        padding: 25
        spacing: 25
        orientation:'vertical'
        MDRaisedButton: 
            size_hint: 1, .2
            text: 'Симптомы'
            on_release:
                app.root.change_screen('symptomsScreen')
        MDRaisedButton:
            size_hint: 1, .2
            text: 'Ключевые слова'
        MDRaisedButton:
            size_hint: 1, .2
            text: 'Пользователи'
        MDRaisedButton:
            size_hint: 1, .1
            text: 'Выйти'
            on_release:
                app.root.change_screen_to_prev()



<FilterMenuHeader>
    spacing: "4dp"
    padding: "4dp"
    adaptive_height: True

    MDIconButton:
        icon: "filter"
        pos_hint: {"top": 1}

    MDLabel:
        text: "Фильтр:"
        adaptive_size: True
        pos_hint: {"center_y": .5}

<SymptomsScreen>:
    name: 'symptomsScreen'
    MDBoxLayout:
        orientation: 'vertical'
        MDTopAppBar:
            id: topBar
            left_action_items:
                [
                ['arrow-left', lambda x: app.root.change_screen_to_prev(), 'Назад'],
                ]
            right_action_items:
                [
                ['plus-circle', lambda x: root.add_symptom(), 'Добавить'],
                ['help', lambda x: root.help_popup(), 'Помощь'],
                ]
            
        MDBoxLayout:
            padding: 10
            size_hint_y: 1
            id: table_place 

        InnerLayout:
            
            size_hint_y: None
            orientation: 'horizontal'
            id: bottomBar
            MDTextField:
                id: searchField
                on_text: root.search(self.text)
                hint_text: "Поиск"
                icon_right: "magnify"
                mode: "round"

            MDFillRoundFlatIconButton:
                id: filterButton
                icon: "filter"
                text: "Фильтр"
                # pos_hint: {"center_x": .5, "center_y": .5}
                on_release: root.menu.open()
            
<SymptomAddEditScreen>:
    name: 'symptomAddEditScreen'
    MDBoxLayout:
        pos_hint: {"top": 1}
        adaptive_height: True
        orientation: 'vertical'
        MDTopAppBar:
            id: topBar
            title: root.symptom
            left_action_items:
                [
                ['arrow-left', lambda x: app.root.change_screen_to_prev(), 'Назад'],
                ]

            right_action_items:
                [
                ['content-save', lambda x: app.root.change_screen_to_prev(), 'Сохранить и выйти'],
                ['content-save-plus', lambda x: app.root.change_screen_to_prev(), 'Сохранить и добавить еще'],
                ]

        InnerLayout:    
            pos_hint: {"top": 1}
            adaptive_height: True

            orientation: 'horizontal'
            MDTextField:
                size_hint_x: 1
                hint_text: "Название"
                max_text_length: 30

            MDTextField:
                size_hint_x: .2
                hint_text: "Стр."
                max_text_length: 3

        InnerLayout:
            # adaptive_height: True
            orientation: 'horizontal'
            size_hint_y: None
            height: dp(300)
            MDTextField:
                size_hint: 1, 1
                multiline: True
                hint_text: "Описание"
                # mode: "round"
                max_text_length: 300
        
        MDBoxLayout:
            # adaptive_height: True
            orientation: 'vertical'
            padding: 10
            size_hint_y: None
            height: dp(100)

            MDLabel:
                text: "Ссылки на симптомы"
                halign: "left"
                theme_text_color: "Hint"

            InnerLayout:
                padding: 0
                size_hint_y: 1

                MDFillRoundFlatIconButton:
                    size_hint_y: 1
                    size_hint_x: 1
                    id: filterButton
                    icon: "check-circle-outline"
                    text: 'Выбрать'
                    # pos_hint: {"center_x": .5, "center_y": .5}
                    # on_release: root.menu.open()

                MDFillRoundFlatIconButton:
                    size_hint_y: 1
                    size_hint_x: 1
                    id: filterButton
                    icon: "cancel"
                    text: 'Выбрать'

        # Надо будет парсить сюда ключевые слова, собирать их в строку из списка с разделителем ',<SPACE>', обратно парсить через запятую и каждую запись через strip() лишать пробелов и to_lower() всем тоже делать
        # Еще можно выделять те ключевые слова, что есть в базе зеленым, а новые, которые добавятся после добавления записи выделять желтым
        InnerLayout:
            adaptive_height: True
            MDTextField:
                size_hint_x: 1
                hint_text: "Ключевые слова"
                helper_text: "Вводите через запятую (Можно с пробелами)"
                helper_text_mode: "on_focus"

        
            

        
